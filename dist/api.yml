---
openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:3000/
    description: SwaggerHub API Auto Mocking
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /Register:
    post:
      tags:
        - Auth
      summary: Add new user
      description: A new user from the client is added to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /Login:
    post:
      tags:
        - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginScheme"
      responses:
        "200":
          description: >
            login succeeded

          # headers:
          #   Set-Cookie:
          #     schema:
          #       type: string
          #       example: session=87s97sdhgf279293f8w0e9
          # Note that the Set-Cookie header and securitySchemes are not connected in any way, and the Set-Header definition is for documentation purposes only.
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"

  /league/getDetails:
    get:
      tags:
        - league
      summary: Return the details about the current 
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Leauge"
        "400":
          description: There is no current league taking place



  /gamechange/MakeLeague/:
    post:
      tags:
        - league; Admin
      summary: Make League games out of current teams and referees. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Type:
                  type: integer
                  example: 1
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Leauge"
        "400":
          description: There is no current league taking place




  /game/allGames/:
    get:
      tags:
        - Games
      summary: return all the games in the season 
      responses:
        "200":
          description: match
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Game"
        "400":
          description: something went wrong

  /game/getClosestGame:
    get:
      tags:
        - Games
      summary: returns the colset game in the leauge
      responses:
        "200":
          description: match
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
        "400":
          description: something went wrong
  /game/getCurrentStageGames:
    get:
      tags:
        - Games
      summary: returns the current stage games
      responses:
        "200":
          description: match
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
        "400":
          description: something went wrong

  /game/getDetails/{gameId}:
    get:
      tags:
        - Games
      summary: search a game by ID
      parameters:
        - name: gameId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 42
      responses:
        "200":
          description: match
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
        "400":
          description: something went wrong
        
  /gamechange/: #changed
    post:
      tags:
      - Games, Admins
      summary: Add a new game to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gameDate:
                  type: date
                  pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
                  example: "2021-05-30"
                homeTeam:
                  type: integer
                  example: 85
                awayTeam:
                  type: integer
                  example: 211
                referee:
                  type: String
                  example: Daniel Izmaylov
                stageName:
                  type: String
                  example: Regular Season
                stadium: 
                  type: String
                  example: Sydbank Park
      responses:
        "201":
          description: Game created
        "409":
          description: Game already in system
        "400":
          description: something went wrong
          
  /gamechange/{gameId}:
    put: #change
      tags:
      - Games, Admins
      summary: update game results
      parameters:
      - name: gameId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 56
      requestBody:
        description: game results
        content:
          application/json:
            schema:
              type: object
              properties:
                homeScore:
                  type: integer
                awayScore:
                  type: integer
        required: true
      responses:
        "200":
          description: game updated
        "400":
          description: something went wrong
        
          
  /game/{gameId}/events/:
    get: #CHANGED
      tags:
      - Games
      summary: return all the event of the game
      parameters:
      - name: gameId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 56 
      responses:
        "200":
          description: OK. recipes on the way.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

        "204":
          description: Bad, No Event was found.
        "406":
          description: Game Not Found.
        "401":
          description: Unauthorized.
        "400":
          description: Bad Request.

  /gamechange/{gameId}/events/:
    post:
      tags:
      - Games, Admins
      summary: Add an event to a game
      parameters:
      - name: gameId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 56
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Event'
        required: true
      responses:
        "201":
          description: event added sucssfuly.
        "406":
          description: Game Not Found.
        "400":
          description: Bad Request.
        "401":
          description: Unauthorized.

  /coach/coachDetailById/{coachId}:
    get:
      tags:
        - Coachs
      summary: get coach personal page by ID
      operationId: CoachlPlayerPage
      parameters:
        - name: coachId
          in: path
          description: Identification of the requested coach by id.
          required: true
          style: simple
          explode: false
          schema:
            type: number
            example: 456421
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coach"
        "204":
          description: Bad, No Content was found.
        "400":
          description: Bad Request.
        "401":
          description: Unauthorized.

    # put:
    #   tags:
    #   - Coachs
    #   summary: get coach personal page
    #   operationId: CoadIDchange
    #   parameters:
    #   - name: coachId
    #     in: path
    #     description: Identification of the requested coach by id.
    #     required: true
    #     style: simple
    #     explode: false
    #     schema:
    #       type: number
    #       example: 234
    #   responses:
    #     "200":
    #       description: success
    #     "400":
    #       description: somting went wrong
  /coach/coachDetailByName/{coach_name}:
    get:
      tags:
        - Coachs
      summary: search coach by name by name
      parameters:
        - name: coach_name
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Jens
      responses:
        "200":
          description: data of specific user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coach"

        "400":
          description: Bad Request.

  /coach/coachDetailByName/{coach_name}/filterbyTeam/{teamName}:
    get:
      tags:
        - Coachs
      summary: Search player by name
      parameters:
        - name: coach_name
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: J
        - name: teamName
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Horsens
      responses:
        "200":
          description: data of specific player
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: "#/components/schemas/PlayerShort"
        "400":
          description: Bad Request.
          
  /player/playerFullDetails/{playerId}:
    get:
      tags:
        - Players
      summary: get Player personal page by ID
      operationId: PersnoalPlayerPage
      parameters:
        - name: playerId
          in: path
          description: Identification of the requested player by id.
          required: true
          style: simple
          explode: false
          schema:
            type: number
            example: 85764
      responses:
        "200":
          description: OK. recipes on the way.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        "406":
          description: no player with this id.
        "400":
          description: Bad Request.      
    # put:
    #   tags:
    #   - Players
    #   summary: update player page
    #   operationId: playerchange
    #   parameters:
    #   - name: playerId
    #     in: path
    #     description: Identification of the requested playr by id.
    #     required: true
    #     style: simple
    #     explode: false
    #     schema:
    #       type: number
    #       example: 234
    #   responses:
    #     "200":
    #       description: success
    #     "400":
    #       description: somting went wrong

  /player/SearchPlayerByName/{playerName}:
    get:
      tags:
        - Players
      summary: Search player by name
      parameters:
        - name: playerName
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: jesper
      responses:
        "200":
          description: data of specific player
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: "#/components/schemas/PlayerShort"
        "400":
          description: Bad Request.


  /player/SearchPlayerByName/{playerName}/filterbyTeam/{teamName}:
    get:
      tags:
        - Players
      summary: Search player by name filter by teamName
      parameters:
        - name: playerName
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: jesper
        - name: teamName
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Lyngby
      responses:
        "200":
          description: data of specific player
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: "#/components/schemas/PlayerShort"
        "400":
          description: Bad Request.

  /player/SearchPlayerByName/{playerName}/filterbyPosition/{position}:
    get:
      tags:
        - Players
      summary: Search player by name fillter by position
      parameters:
        - name: playerName
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: jesper
        - name: position
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
          example: 3
      responses:
        "200":
          description: data of specific player
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: "#/components/schemas/PlayerShort"
        "400":
          description: Bad Request.

  /teams/teamFullDetails/{teamId}:
    get:
      tags:
        - Teams
      summary: get team personal page by ID
      operationId: TeamPage
      parameters:
        - name: teamId
          in: path
          description: Identification of the requested team by id.
          required: true
          style: simple
          explode: false
          schema:
            type: number
            example: 85
      responses:
        "200":
          description: OK. recipes on the way.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          description: Bad Request.

  /teams/teamByName/{team_name}:
    get:
      tags:
        - Teams
      summary: Search team by name
      parameters:
        - name: team_name
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Horsens
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamShort"
        "400":
          description: Bad Request.

  /homepage/favoriteplayer:
    get:
      tags:
        - Personal Page player
      summary: Get user's favorite players
      responses:
        "200":
          description: favorite team array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HomePage/properties/favorite_teams"
        "401":
          description: User needs to be logged in
        "400":
          description: somting went wrong

  /homepage/favoriteteam:
    get:
      tags:
        - Personal Page team
      summary: Get user's favorite teams
      responses:
        "200":
          description: favorite team array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HomePage/properties/favorite_teams"
        "401":
          description: User needs to be logged in


  /homepage/favoriteplayer/{playerId}:
    put:
      tags:
        - Personal Page player
      summary: add a player to the user's favorites
      parameters:
        - name: playerId
          in: path
          required: true
      responses:
        "200":
          description: The player was successfully added to favorites
        "400":
          description: The player does not exists in the system.
        "401":
          description: User needs to be logged in.
        "406":
          description: The player is  already in your favorites.
    delete:
      tags:
        - Personal Page player
      summary: Delete a player from the user's favorite players list
      parameters:
        - name: playerId
          in: path
          required: true
      responses:
        "200":
          description: The player was  successfully removed from  favorites
        "400":
          description: invalid player id.
        "401":
          description: User needs to be logged in.
        "406":
          description: The player is not in your favorites.
  /homepage/favoriteteam/{teamId}:
    put:
      tags:
        - Personal Page team
      summary: add a team to the user's favorites
      parameters:
        - name: teamId
          in: path
          required: true
      responses:
        "200":
          description: The team was successfully added to your favorite
        "400":
          description: invalid team id.
        "401":
          description: User needs to be logged in.
        "406":
          description: The team is  already in your favorites.
    delete:
      tags:
        - Personal Page team
      summary: Delete a team from the user's favorite team list
      parameters:
        - name: teamId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: The team was  successfully removed from  favorites
        "400":
          description: invalid team id.
        "401":
          description: User needs to be logged in.
        "406":
          description: The team is  not in your favorites.
  /homepage/favoritematches:
    get:
      tags:
        - Personal Page match
      summary: Get user's favorite matches
      responses:
        "200":
          description: favorite match array
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HomePage/properties/favorite_matches"
        "401":
          description: User needs to be logged in
  /homepage/favoritematches/{gameId}:
    delete:
      tags:
        - Personal Page match
      summary: Delete a game from the user's favorite game list
      parameters:
        - name: gameId
          in: path
          required: true
      responses:
        "200":
          description: The game was successfully removed from favorites
        "400":
          description: invalid game id
        "401":
          description: User needs to be logged in
        "406":
          description: The game  is  not  in your favorites.
    put:
      tags:
        - Personal Page match
      summary: add a match to the user's favorites
      parameters:
      - name: gameId
        in: path
        required: true
      responses:
        "200":
          description: The game was successfully saved in favorite
        "400":
          description: The game does not exists in the system 
        "401":
          description: User needs to be logged in
        "406":
          description: The team is  already in your favorites
  /league/Referees/:
    get:
      tags:
        - league
      summary: Get all available Referees
      responses:
        "200":
          description: all available Referees
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string 
                example: ["Daniel Izmaylov", "Ofek Ronen" ]

  /league/Stages/:
    get:
      tags:
        - league
      summary: Get all available Referees
      responses:
        "200":
          description: all available Referees
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string 
                example: ["Conference League Play-offs-Final","Regular Season"]

  /league/Stadiums/:
    get:
      tags:
        - league
      summary: Get all available Stadiums
      responses:
        "200":
          description: all available Stadiums
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string 
                example: ["MCH Arena",  "Right to Dream Park"]
components:
  schemas:
    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          example: ofek3928
        password:
          maxLength: 10
          minLength: 5
          type: string
          example: "123456"
        fullName:
          type: string
          example: Ofek

    Referee:
      type: object
      properties:
        id:
          type: integer
          example: 33
        Name:
          type: string
          example: Dani
        image-url:
          type: string
          format: URL
        qualification:
          type: string
          example: Line max

    Leauge:
      type: object
      properties:
        id:
          type: integer
          example: 17328
        Name:
          type: string
          example: Superliga
        Season:
          type: string
          example: 2020/2021
        Stage:
          type: string
          example: "1"
        country:
          type: string
          example: Denmark
        games:
          type: array
          items:
            $ref: "#/components/schemas/Game"

    Player:
      type: object
      properties:
        player_id:
          type: integer
          example: 82808
        name:
          type: string
          example: Jesper Hansen
        team_name:
          example: Midtjylland
        position:
          type: integer
          example: 1
        image:
          type: string
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/24/82808.png
        nationality:
          type: string
          example: Australian
        birth_date:
          type: date
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "1983-05-30"
        birthcountry:
          type: string
          example: Austrailia
        height:
          type: int
          example: 182
        weight:
          type: int
          example: 75

    PlayerShort:
      type: object
      properties:
        player_id:
          type: integer
          example: 82808
        name:
          type: string
          example: Jesper Hansen
        position:
          type: integer
          example: 1
        team_name:
          example: Midtjylland
        image:
          type: string
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/24/82808.png
      
    Coach:
      type: object
      properties:
        id:
          type: integer
          example: 456421
        fullName:
          type: string
          example: Jess Thorup
        teamName:
          type: string
          example: København
        image-url:
          type: string
          format: URL


    Team:
      type: object
      properties:
        team_id:
          type: integer
          example: 85
        team_name:
          type: string
          example: København
        logo_path:
          type: url
          example: "https://cdn.sportmonks.com/images//soccer/teams/21/85.png"
        coach-id:
          type: integer
          example: 456421
        coach-name:
          type: string
          example: Jess Thorup
        players:
          type: array
          items:
            $ref: "#/components/schemas/Player"
        Games:
          type: array
          items:
            $ref: "#/components/schemas/Game"

    
    TeamShort:
      type: object
      properties:
        team_id:
          type: integer
          example: 85
        teamName:
          type: string
          example: København
        logo_path:
          type: url
          example: "https://cdn.sportmonks.com/images//soccer/teams/21/85.png"

    Game:
      type: object
      properties:
        game_id:
          type: int
          example: 7
        gameDate:
          type: string
          example: 19941030
        homeTeam:
          $ref: "#/components/schemas/Team/properties/team_id"
        awayTeam:
          $ref: "#/components/schemas/Team/properties/team_id"
        referees:
          $ref: "#/components/schemas/Referee/properties/Name"
        homeScore:
          type: integer
          example: 2
        awayScore:
          example: 3
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"

    Event:
      type: object
      properties:
        gameId:
          type: integer
          example: 7
        eventType:
          type: string
          example: "red Card"
        gameDate:
          type: string
          example: 19941030
        gameTime:
          type: string
          example: "17:30:25"
        inGameMinute:
          type: integer
          example: 13
        eventDescription:
          type: string
          example: foul by Ronaldo

    HomePage:
      type: object
      properties:
        id:
          type: integer
        user:
          $ref: "#/components/schemas/User"
        favorite_players:
          type: array
          items:
            $ref: "#/components/schemas/Player"
        favorite_teams:
          type: array
          items:
            $ref: "#/components/schemas/Team"
        favorite_matches:
          type: array
          items:
            $ref: "#/components/schemas/Game"
    LoginScheme:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username conatins letters only
          example: admin
        password:
          type: string
          minLength: 5
          maxLength: 10
          format: password
          description: password conatins at least one number and one special char
          example: admin
